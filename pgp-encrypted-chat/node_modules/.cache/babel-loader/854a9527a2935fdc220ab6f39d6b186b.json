{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/pgp-encrypted-chat/src/components/App.jsx\";\nimport React, { useState } from 'react';\nimport Layout from './Layout';\nimport users from '../data/users';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2'\n    },\n    secondary: {\n      main: '#dc004e'\n    },\n    background: {\n      default: '#f5f5f5'\n    }\n  }\n});\nconst App = () => {\n  // State for storing user's keys and current selection\n  const [keyPair, setKeyPair] = useState({\n    publicKey: null,\n    privateKey: null\n  });\n  const [currentUser, setCurrentUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [selectedRecipient, setSelectedRecipient] = useState(null);\n\n  // Function to add a new message to the inbox\n  const addMessage = message => {\n    setMessages([...messages, message]);\n  };\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Layout, {\n    users: users,\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    keyPair: keyPair,\n    setKeyPair: setKeyPair,\n    messages: messages,\n    addMessage: addMessage,\n    selectedRecipient: selectedRecipient,\n    setSelectedRecipient: setSelectedRecipient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\nexport default App;","map":{"version":3,"names":["React","useState","Layout","users","createTheme","ThemeProvider","CssBaseline","theme","palette","primary","main","secondary","background","default","App","keyPair","setKeyPair","publicKey","privateKey","currentUser","setCurrentUser","messages","setMessages","selectedRecipient","setSelectedRecipient","addMessage","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/workspaces/codespaces-blank/pgp-encrypted-chat/src/components/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Layout from './Layout';\nimport users from '../data/users';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n    background: {\n      default: '#f5f5f5',\n    },\n  },\n});\n\nconst App = () => {\n  // State for storing user's keys and current selection\n  const [keyPair, setKeyPair] = useState({ publicKey: null, privateKey: null });\n  const [currentUser, setCurrentUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [selectedRecipient, setSelectedRecipient] = useState(null);\n  \n  // Function to add a new message to the inbox\n  const addMessage = (message) => {\n    setMessages([...messages, message]);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Layout \n        users={users}\n        currentUser={currentUser}\n        setCurrentUser={setCurrentUser}\n        keyPair={keyPair}\n        setKeyPair={setKeyPair}\n        messages={messages}\n        addMessage={addMessage}\n        selectedRecipient={selectedRecipient}\n        setSelectedRecipient={setSelectedRecipient}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,MAAMC,KAAK,GAAGH,WAAW,CAAC;EACxBI,OAAO,EAAE;IACPC,OAAO,EAAE;MACPC,IAAI,EAAE;IACR,CAAC;IACDC,SAAS,EAAE;MACTD,IAAI,EAAE;IACR,CAAC;IACDE,UAAU,EAAE;MACVC,OAAO,EAAE;IACX;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC;IAAEgB,SAAS,EAAE,IAAI;IAAEC,UAAU,EAAE;EAAK,CAAC,CAAC;EAC7E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACA,MAAMwB,UAAU,GAAIC,OAAO,IAAK;IAC9BJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEK,OAAO,CAAC,CAAC;EACrC,CAAC;EAED,oBACE1B,KAAA,CAAA2B,aAAA,CAACtB,aAAa;IAACE,KAAK,EAAEA,KAAM;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BjC,KAAA,CAAA2B,aAAA,CAACrB,WAAW;IAAAsB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACfjC,KAAA,CAAA2B,aAAA,CAACzB,MAAM;IACLC,KAAK,EAAEA,KAAM;IACbgB,WAAW,EAAEA,WAAY;IACzBC,cAAc,EAAEA,cAAe;IAC/BL,OAAO,EAAEA,OAAQ;IACjBC,UAAU,EAAEA,UAAW;IACvBK,QAAQ,EAAEA,QAAS;IACnBI,UAAU,EAAEA,UAAW;IACvBF,iBAAiB,EAAEA,iBAAkB;IACrCC,oBAAoB,EAAEA,oBAAqB;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5C,CACY,CAAC;AAEpB,CAAC;AAED,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}